#!/data/data/com.termux/files/usr/bin/env bash
# modificated on 06/21/2020 by Ivam3
#set -euo pipefail
IFS=$'\n\t'
trap ctrl_c 2
ctrl_c(){ printf "$Y\n\n   [¿] Need a help [?]$B\nTelegram : t.me/Ivam3_Bot$W\n\n";exit;}
R='\033[1;31m'
G='\033[1;32m'
Goke='\033[92m'
W='\033[0m'
javarepo="https://github.com/ivam3/java/releases/download"
apktoolV=$(apktool --version)

banner() { printf "$Goke           _   ___     ___  \n          | | / \ \   / / \     \n       _  | |/ _ \ \ / / _ \    \n      | |_| / ___ \ V / ___ \  \n       \___/_/   \_\_/_/   \_\  \n#:For Termux whithout rooted device:#\n#::::::: @Ivan3byCinderella ::::::::#$W\n";}

main() {
	printf "$G(_>)─➤$W usage: bash setup <java8/java9/apktool>\n$G ╰───────➤$W ex1: bash setup java8$G────➤$W To install java8 and dependencies\n$G ╰───────➤$W ex2: bash setup apktool$G───➤$W To change apktool version\n";exit
}

dependencies() {
	command -v npm >/dev/null || yes|apt install perl nodejs
	command -v wget >/dev/null || yes|apt install wget
	command -v git >/dev/null || yes|apt install git
}
		
cleanup() { rm -f jdk8_${arch}.tar.gz;rm -rf $PREFIX/share/bin;rm -rf node-remap-apktool-unicode-filenames;}

get_tar() {
    wget -q --show-progress -c $javarepo/$version/jdk8_$arch.tar.gz -O jdk8_$arch.tar.gz
    tar -xf jdk8_$arch.tar.gz -C $PREFIX/share 
    chmod +x $PREFIX/share/bin/*
}

get_binaries() {
cat <<- CONF > $PREFIX/bin/java
#!/usr/bin/bash
unset LD_PRELOAD
export JAVA_HOME="$PREFIX/share/jdk8"
export LIB_DIR="\$PREFIX/share/glib"
export LD_LIBRARY_PATH="\$LIB_DIR"
exec proot -0 \$JAVA_HOME/bin/java "\$@"
CONF
cat <<- CONF > $PREFIX/bin/apktool
#!/usr/bin/bash
export JAVA_HOME="\$PREFIX/share/jdk8"
export LIB_DIR="\$PREFIX/share/glib"
export LD_LIBRARY_PATH=\$LIB_DIR:\$LD_LIBRARY_PATH
umask 000
exec \$PREFIX/bin/java -Xmx1024m -Djava.io.tmpdir=\$JAVA_HOME -jar \$PREFIX/var/spool/apktool.jar -p \$JAVA_HOME "\$@"
CONF
}

get_apktool() {
	printf "$G(_>)─➤$W Moving wrapper scripts for java 8"
	if [ ! -d $PREFIX/var/spool/ ]; then
		mkdir -p $PREFIX/var/spool/
	fi
        cp openjdk/apktool_jar/apktool_2.3.4.jar $PREFIX/var/spool/apktool.jar
        cp openjdk/lib/libc++_shared.so $PREFIX/share/glib/
}

apktool_fix() {
	git clone https://github.com/warren-bank/node-remap-apktool-unicode-filenames >/dev/null 2>&1
	if [ -d warren-bank ]; then
		cd node-remap-apktool-unicode-filenames
		npm install --global @warren-bank/node-remap-apktool-unicode-filenames
	else
		printf "$R\n(_>)─➤$W ERR-rauf\n"
	fi
}
banner
if [[ -z $1 ]]; then
	main
elif [[ $1 = java8 ]]; then
	case "$(dpkg --print-architecture)" in
		aarch64|arm64|armhf|armv8l)
			arch=aarch64
			version="1.8.0-152"
			;;
		arm|armv7l|i868)
			arch=arm
			version="1.8.0"
			;;
		*)
			printf "$G(_>)─➤$W Architecture not supported\n"
			exit
			;;
	esac
	dependencies
	get_tar
	get_binaries
	get_apktool
	apktool_fix
	cleanup
elif [[ $1 = java9 ]]; then
	printf "$R(_>)─➤$W Java9 is not available yet\n"
	exit
CXC() {
	for i in dirmngr gnupg-curl;do
		yes|apt install dirmngr >/dev/null 2>&1
	done
	printf "$G(_>)─➤$W Adding PGP key"
	apt-key adv --keyserver pool.sks-keyservers.net --recv 9D6D488416B493F0 >/dev/null 2>&1
	printf "$G(_>)─➤$W Adding repository"
	mkdir -p $PREFIX/etc/apt/sources.list.d && echo "deb https://termux.xeffyr.ml/ extra main x11" > $PREFIX/etc/apt/sources.list.d/list.list
	printf "$G(_>)─➤$W Updating Termux"
	apt update
	printf "$G(_>)─➤$W Installing JAVA 9"
	yes|apt install openjdk-9-jdk-headless
}
elif [[ $1 = apktool ]]; then
	until [ -z $answ ]; do
		printf "$Y(_>)─➤$W actual apktool version:$G $apktoolV\n$G(_>)─➤$W Choose a version to install$G\n ╰───➤$W 2.2.2$G\n ╰───➤$W 2.2.3$G\n ╰───➤$W 2.2.4$G\n ╰───➤$W 2.3.0$G\n ╰───➤$W 2.3.1$G\n ╰───➤$W 2.3.2$G\n ╰───➤$W 2.3.4\n$W";read -p "(_>)─➤ " answ
	done
        rm $PREFIX/var/spool/apktool.jar
        cp $PREFIX/share/java/openjdk/apktool_jar/apktool_$answ.jar $PREFIX/var/spool/apktool.jar
else
	main
fi
printf "$G\n(_>)─➤ DONE!!$W\n"
